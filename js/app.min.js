/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n//import {} from \"./dynamicAdapt.js\"\r\n//import {} from \"./sliders.js\"\r\n//import {} from \"./burger-menu.js\"\r\n//import {} from \"./spollers.js\"\r\n//import { _removeClasses } from \"./functions.js\"\r\n//import {} from \"./script.js\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n//добавлення placeholder=\"${comValue}\"\r\nconst dataValue = document.querySelector('.subscribe__form, .subscribe__input');\r\nconst comValue = dataValue.querySelector('.subscribe__input').dataset.value;\r\ndataValue.innerHTML = `\r\n<input placeholder=\"${comValue}\" type=\"email\" autocomplete=\"off\" name=\"form[]\" data-error=\"Error\" data-value=\"Enter your email\" class=\"subscribe__input\">\r\n<button type=\"submit\" class=\"subscribe__button\">Subscribe</button>`;\r\n\r\n//====================ДЛЯ ОБЧИСЛЕННЯ НАЙБІЛЬШИХ СТОРІН============================================\r\n// let scrollWidth = Math.max(\r\n//     document.body.scrollWidth, document.documentElement.scrollWidth,\r\n//     document.body.offsetWidth, document.documentElement.offsetWidth,\r\n//     document.body.clientWidth, document.documentElement.clientWidth,\r\n// );\r\n// let scrollHeight = Math.max(\r\n//     document.body.scrollHeight, document.documentElement.scrollHeight,\r\n//     document.body.offsetHeight, document.documentElement.offsetHeight,\r\n//     document.body.clientHeight, document.documentElement.clientHeight,\r\n// );\r\n//=======================================================================\r\n/*============================================================================================================*/\r\n//ПАРАЛАКС ЕФЕКТ ПРИ РУСІ МИШІ ТА СКРОЛІ САЙТУ\r\n/*============================================================================================================*/\r\n// window.onload = function()  {\r\n\r\n//     const parallax = document.querySelector('.parallax');\r\n\r\n//     if (parallax) {\r\n\r\n//         const content = document.querySelector('.parallax__container');\r\n//         const clouds = document.querySelector('.images-parallax__clouds');\r\n//         const mountains = document.querySelector('.images-parallax__mountains');\r\n//         const human = document.querySelector('.images-parallax__humen');\r\n\r\n//         //КОЕФІЦІЄНТИ\r\n//         const forClouds = 40;\r\n//         const forMountains = 20;\r\n//         const forHuman = 10;\r\n\r\n//         //ШВИДКІСТЬ АНІМАЦІЇ\r\n//         const speed = 0.05;\r\n\r\n//         //ОГОЛОШЕННЯ ЗМІННИХ\r\n//         let positionX = 0, positionY = 0;\r\n//         let coordXprocent = 0, coordYprocent = 0;\r\n\r\n//         function setMouseParallaxStyle() {\r\n//             const distX = coordXprocent - positionX;\r\n//             const distY = coordYprocent - positionY;\r\n\r\n//             positionX = positionX + (distX * speed);\r\n//             positionY = positionY + (distY * speed);\r\n\r\n//             //ПЕРЕДАЄМО СТИЛІ       \r\n//             clouds.style.cssText = ` transform: translate(${positionX / forClouds}%, ${positionY / forClouds}%);`;\r\n//             mountains.style.cssText = ` transform: translate(${positionX / forMountains}%, ${positionY / forMountains}%);`;\r\n//             human.style.cssText = ` transform: translate(${positionX / forHuman}%, ${positionY / forHuman}%);`;\r\n\r\n//             requestAnimationFrame(setMouseParallaxStyle);\r\n//         }\r\n//         setMouseParallaxStyle();\r\n\r\n//         parallax.addEventListener(\"mousemove\", function (e) {\r\n//             //ОТРИМАННЯ ШИРИНИ І ВИСОТИ БЛОКА\r\n//             const parallaxWidth = parallax.offsetWidth;\r\n//             const parallaxHeight = parallax.offsetHeight;\r\n\r\n//             //НУЛЬ ПО СЕРЕДИНІ\r\n//             const coordX = e.pageX - parallaxWidth / 2;\r\n//             const coordY = e.pageY - parallaxHeight / 2;\r\n//             //ОТРИМУЄМО ВІДСОТКИ\r\n//             coordXprocent = coordX / parallaxWidth * 100;\r\n//             coordYprocent = coordY / parallaxHeight * 100;\r\n//         });\r\n\r\n//         //ПАРАЛАКС ПРИ СКРОЛІ\r\n//         let thresholdSets = [];\r\n//         for ( let i = 0; i <= 1.0; i +=0.005) {\r\n//             thresholdSets.push(i);\r\n//         }\r\n//         const callback = function (entries, observer) {\r\n//             const scrollTopProcent = window.pageYOffset / parallax.offsetHeight * 100;\r\n//             setParallaxItemsStyle(scrollTopProcent);\r\n//         };\r\n//         const observer = new IntersectionObserver(callback, {\r\n//             threshold: thresholdSets\r\n//         });\r\n\r\n//         observer.observe(document.querySelector('.content'));\r\n//         function setParallaxItemsStyle(scrollTopProcent) {\r\n//             content.style.cssText = ` transform: translate(0%, -${scrollTopProcent / 9}%);`;\r\n//             mountains.parentElement.style.cssText = ` transform: translate(0%, -${scrollTopProcent / 6}%); `;\r\n//             human.parentElement.style.cssText = ` transform: translate(0%, -${scrollTopProcent / 3}%);`;\r\n//         }\r\n//     }\r\n// }\r\n/*============================================================================================================*/\r\n//LAZY LOADING (ЛІНИВЕ ЗАВАНТАЖЕННЯ)\r\n/*============================================================================================================*/\r\n// const lazyImages = document.querySelectorAll('img[data-src], source[data-srcset]');\r\n// const loadMapBlock = document.querySelector('.-load-map');\r\n// const windowHeight = document.documentElement.clientHeight;\r\n// const loadMoreBlock = document.querySelector('.-load-more');\r\n\r\n// let lazyImagesPosition = [];\r\n\r\n// if (lazyImages.length > 0) {\r\n//     lazyImages.forEach(img => {\r\n//         if (img.dataset.src || img.daraset.srcset) {\r\n//             lazyImagesPosition.push(img.getBoundingClientRect().top + pageYOffset);\r\n//             lazyScrollCheck();\r\n//         }\r\n//     });\r\n// }\r\n\r\n// window.addEventListener('scroll', lazyScroll);\r\n\r\n// function lazyScroll() {\r\n//     if (document.querySelectorAll('img[data-src], source[data-srcset]').length > 0) {\r\n//     lazyScrollCheck();\r\n//     }\r\n//     if (!loadMapBlock.classList.contains('_loaded')) {\r\n//         getMap();\r\n//     }\r\n//     if (!loadMoreBlock.classList.contains('_loading')) {\r\n//         loadMore();\r\n//     }\r\n\r\n// }\r\n\r\n\r\n// function lazyScrollCheck() {\r\n//     let imgIndex = lazyImagesPosition.findIndex(\r\n//         item =>pageYOffset > item - windowHeight\r\n//     );\r\n//     if (imgIndex >= 0) {\r\n//         if (lazyImages[imgIndex].dataset.src) {\r\n//             lazyImages[imgIndex].src = lazyImages[imgIndex].dataset.src;\r\n//             lazyImages[imgIndex].removeAttribute('data-src');\r\n//         } else if (lazyImages[imgIndex].dataset.srcset) {\r\n//             lazyImages[imgIndex].srcset = lazyImages[imgIndex].dataset.srcset;\r\n//             lazyImages[imgIndex].removeAttribute('data-srcset');\r\n//         }\r\n//         delete lazyImagesPosition[imgIndex];\r\n//     }\r\n// }\r\n\r\n// //~~~~~ЗАВАНТАЖЕННЯ КАРТИ~~~~~\r\n// function getMap() {\r\n//     const loadMapBlockPos = loadMapBlock.getBoundingClientRect().top + pageYOffset;\r\n//     if (pageYOffset > loadMapBlockPos - windowHeight) {\r\n//         const loadMapUrl = loadMapBlock.dataset.map;\r\n//         if (loadMapUrl) {\r\n//             loadMapBlock.insertAdjacentHTML(\r\n//                 \"beforeend\",\r\n//                 `<iframe src=\"${loadMapUrl}\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"></iframe>`\r\n//             );\r\n//             loadMapBlock.classList.add('_loaded');\r\n//         }\r\n//     }\r\n// }\r\n\r\n// function loadMore() {\r\n//     const loadMoreBlockPos = loadMoreBlock.getBoundingClientRect().top + pageYOffset;\r\n//     const loadMoreBlockHeight = loadMoreBlock.offsetHeight;\r\n\r\n//     if (pageYOffset > (loadMoreBlockPos + loadMoreBlockHeight) - windowHeight) {\r\n//         getContent();\r\n//     }\r\n// }\r\n\r\n// async function getContent() {\r\n//     if (!document. querySelector('._loading-icon')) {\r\n//         loadMoreBlock.insertAdjacentHTML(\r\n//             'beforeend',\r\n//             `<div class=\"_loading-icon\"></div>`\r\n//         );\r\n//     }\r\n//     loadMoreBlock.classList.add('_loading');\r\n\r\n//     let response = await fetch('_more.html', {\r\n//         method:'GET',\r\n//     });\r\n//     if (response.ok) {\r\n//         let result = await response.text();\r\n//         loadMoreBlock.insertAdjacentHTML('beforeend', result);\r\n//         loadMoreBlock.classList.remove('_loading');\r\n//         if (document.querySelector('._loading-icon')) {\r\n//             document.querySelector('._loading-icon').remove();\r\n//         }\r\n//     } else {\r\n//         alert(\"ПОМИЛКА\");\r\n//     }\r\n// }\r\n/*============================================================================================================*/\r\n//ЗІРКОВИЙ РЕЙТИНГ БЕЗ JS І ДО СКЛАДНОГО З AJAX\r\n/*============================================================================================================*/\r\n// const ratings = document.querySelectorAll('.rating');\r\n// if (ratings.length > 0) {\r\n//     initRatings();\r\n// }\r\n// //ОСНОВНА ФУНКЦІЯ\r\n// function initRatings() {\r\n//     let ratingActive, ratingValue;\r\n//     for (let index = 0; index < ratings.length; index++) {\r\n//         const rating = ratings[index];\r\n//         initRating(rating);\r\n//     }\r\n//     //ІНІЦІАЛІЗУЄМО КОНКРЕТНИЙ РЕЙТИНГ\r\n//     function initRating(rating){\r\n//         initRatingVars(rating);\r\n\r\n//         setRatingActiveWidth();\r\n\r\n//         if (rating.classList.contains('rating_set')) {\r\n//             setRating(rating);\r\n//         }\r\n//     }\r\n\r\n//     //ІНІЦІАЛІЗАЦІЯ ЗМІННИХ\r\n//     function initRatingVars(rating) {\r\n//         ratingActive = rating.querySelector('.rating__active');\r\n//         ratingValue = rating.querySelector('.rating__value');\r\n//     }    \r\n//     //МІНЯЄМО ШИРИНУ АКТИВНИХ ЗІРОК\r\n//     function setRatingActiveWidth(index = ratingValue.innerHTML) {\r\n//         const ratingActiveWidth = index / 0.05;\r\n//         ratingActive.style.width = `${ratingActiveWidth}%`;\r\n//     }\r\n//     //МОЖЛИВІСТЬ ВКАЗАТИ ОЦІНКУ\r\n//     function setRating(rating) {\r\n//         const ratingItems = rating.querySelectorAll('.rating__item');\r\n//         for (let index = 0; index < ratingItems.length; index++) {\r\n//             const ratingItem = ratingItems[index];\r\n//             ratingItem.addEventListener(\"mouseenter\", function (e) {\r\n//                 //ОНОВЛЕННЯ ЗМІННИХ\r\n//                 initRatingVars(rating);\r\n//                 //ОНОВЛЕННЯ АКТИВНИХ ЗІРОК\r\n//                 setRatingActiveWidth(ratingItem.value);\r\n//             });\r\n//             //ОНОВЛЕННЯ АКТИВНИХ ЗІРОК\r\n//             ratingItem.addEventListener(\"mouseleave\", function (e) {\r\n//                 setRatingActiveWidth();\r\n//             });\r\n//             ratingItem.addEventListener(\"click\", function (e) {\r\n//                 //ОНОВЛЕННЯ ЗМІННИХ\r\n//                 initRatingVars(rating);\r\n//                 if (rating.dataset.ajax) {\r\n//                     //\"ВІДПРАВИТИ\" НА СЕРВЕР\r\n//                     setRatingValue(ratingItem.value, rating);\r\n//                 } else {\r\n//                     //ПОКАЗАТИ ВКАЗАНУ ОЦІНКУ\r\n//                     ratingValue.innerHTML = index + 1;\r\n//                     setRatingActiveWidth();\r\n//                 }\r\n//             });\r\n//         }\r\n//     }\r\n//     async function setRatingValue(value, rating) {\r\n//         if (!rating.classList.contains('rating_sending')) {\r\n//             rating.classList.add('rating_sending');\r\n\r\n//             //ВІДПРАВКА ДАНИХ (VALUE) НА СЕРВЕР\r\n//             let response = await fetch('rating.json', {\r\n//                 method: 'GET',\r\n\r\n//                 // body: JSON.stringify({\r\n//                 //     userRating: value\r\n//                 // }),\r\n//                 // headers: {\r\n//                 //     'content-type' : 'application/json'\r\n//                 // }\r\n\r\n//             });\r\n//             if (response.ok) {\r\n//                 const result = await response.json();\r\n\r\n//                 //ОТРИМУЄМ НОВИЙ РЕЙТИНГ\r\n//                 const newRating = result.newRating;\r\n\r\n//                 //ПОКАЗ НОВОГО СЕРЕДНЬОГО РЕЗУЛЬТАТУ\r\n//                 ratingValue.innerHTML = newRating;\r\n\r\n//                 //ОНОВЛЕННЯ АКТИВНИХ ЗІРОК\r\n//                 setRatingActiveWidth();\r\n\r\n//                 rating.classList.remove('rating_sending');\r\n//             } else {\r\n//                 alert(\"ERROR\");\r\n//                 rating.classList.remove('rating_sending');\r\n//             }\r\n//         }\r\n//     }\r\n// } \r\n/*============================================================================================================*/\r\n//ВІДПРАВКА ФОРМ НА ПОШТУ\r\n/*============================================================================================================*/\r\n// const { default: Swiper, Keyboard, Mousewheel } = require(\"swiper\");\r\n// document.addEventListener('DOMContentLoaded', function () {\r\n//     const form = document.getElementById('form');\r\n//     form.addEventListener('submit', formSend);\r\n//     async function formSend(e) {\r\n//         e.preventDefault();\r\n\r\n//         let error = formValidate(form);\r\n\r\n//         let formData = new FormData(form);\r\n//         formData.append('image', formImage.files[0]);\r\n\r\n\r\n//         if (error === 0) {\r\n//             form.classList.add('_sending');\r\n//         let response = await fetch('sendmail.php', {\r\n//             method: 'POST',\r\n//             body: formData\r\n//         });\r\n//             if (response.ok){\r\n//                 let result =await response.json();\r\n//                 alert(result.message);\r\n//                 formPreview.innerHTML = '';\r\n//                 form.reset();\r\n//                 form.classList.remove('_sending');\r\n//             }else{\r\n//                 alert('ERROR');\r\n//                 form.classList.remove('_sending');\r\n\r\n//             }\r\n//         } else {\r\n//             alert('PLEASE FILL IN THE FIELDS.');\r\n//         }\r\n//     }\r\n//     function formValidate(form) {\r\n//         let error = 0;\r\n//         let formReq = document.querySelectorAll('._req');\r\n//         for (let index = 0; index < formReq.length; index++){\r\n//             const input = formReq[index];\r\n//             formRemoveError(input);\r\n\r\n//             if (input.classList.contains('_email')){\r\n//                 if (emailTest(input)) {\r\n//                     formAddError(input);\r\n//                     error++;\r\n//                 }\r\n//             } else if(input.getAttribute(\"type\") === \"checkbox\" && input.checked === false){\r\n//                 formAddError(input);\r\n//                 error++;\r\n//             } else {\r\n//                 if (input.value === '') {\r\n//                     formAddError(input);\r\n//                     error++;\r\n//                 }\r\n//             }\r\n//         }\r\n//         return error;\r\n//     }\r\n//     function formAddError(input) {\r\n//         input.parentElement.classList.add('_error');\r\n//         input.classList.add('_error');\r\n//     }\r\n//     function formRemoveError(input) {\r\n//         input.parentElement.classList.remove('_error');\r\n//         input.classList.remove('_error');\r\n//     }\r\n//     function emailTest(input) {\r\n//         return !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,8})+$/.test(input.value);\r\n//         }\r\n\r\n//     const formImage = document.getElementById('formImage');\r\n\r\n//     const formPreview = document.getElementById('formPreview');\r\n\r\n//     formImage.addEventListener('change', () => {\r\n//         uploadFile(formImage.files[0]);\r\n//     });\r\n//     function uploadFile(file) {\r\n\r\n//     if (!['image/jpeg', 'image/png', 'image/gif' ].includes(file.type)) {\r\n//         alert('ONLY IMAGES ARE ALLOWED.');\r\n//         formImage.value = '';\r\n//         return;\r\n//     }\r\n\r\n//     if (file.size > 2 * 1024 * 1024) {\r\n//         alert('FILE MUST BE LESS THAN 2MB.');\r\n//         return;\r\n//         }\r\n//         var reader = new FileReader();\r\n//         reader.onload = function (e) {\r\n//             formPreview.innerHTML = ` <img src=\"${e.target.result}\" alt=\"Photo\">`;\r\n//         };\r\n//         reader.onerror = function (e) {\r\n//             alert('ERROR');\r\n//         }\r\n//         reader.readAsDataURL(file);\r\n\r\n//     }\r\n// });\r\n/*============================================================================================================*/\r\n//ПОВНОЕКРАННИЙ ЛЕНДІНГ З НАВІГАЦІЄЮ НА БАЗІ SWIPER\r\n/*============================================================================================================*/\r\n// let wrapper = document.querySelector('.wrapper');\r\n\r\n// let pageSlider = new Swiper('.page' ,{\r\n//     //мої класи\r\n//     wrapperClass: \"page__wrapper\",\r\n//     slideClass: \"page__screen\",\r\n\r\n//     //вертикальний слайдер\r\n//     direction: 'vertical',\r\n\r\n//     //кількість слайдів для показу\r\n//     sliderPerView: 'auto',\r\n\r\n//     //включаєм паралакс\r\n//     parallax: true,\r\n\r\n//     //керування з клавіатури\r\n// keyboard:{\r\n//     //включити/виключити\r\n//     enabled: true,\r\n//     //включити/виключити\r\n//     //тільки коли слайдер\r\n//     //в межах в'юпорта\r\n//     onlyInViewport: true,\r\n//     //включити/виключити\r\n//     //керування клавішами\r\n//     //pageUp, pageDown\r\n//     pageUpDown: true,\r\n//     },\r\n    \r\n//     //керування колесиком миші\r\n//     mousewheel: {\r\n//         //чутливість колесика миші\r\n//         sensitivity: 1,\r\n//         //клас об'єкта якому\r\n//         //буде спрацьовувати прокрутка миші\r\n//         //eventsTarget: \".image-slider\"\r\n//     },\r\n\r\n//     //відключення функцій якщо слайдів менше ніж потрібно\r\n//     watchOverflow: true,\r\n\r\n//     //швидкість\r\n//     speed: 800,\r\n\r\n//     //оновлення слайдера якщо елементи міняються\r\n//     observer: true,\r\n\r\n//     //оновити свайпер\r\n//     //при змінні батьківських елементів слайдера\r\n//     observeParents: true,\r\n    \r\n//     //оновлення свайпера при змінні\r\n//     //дочірних елементів слайду\r\n//     observeSlideChildren: true,\r\n\r\n//     //навігація\r\n//     //булети, поточний стан прогрессбар\r\n//     pagination: {\r\n//         el: '.page__pagination',\r\n//         type: 'bullets',\r\n//         clickable: true,\r\n//         bulletClass: \"page__bullet\",\r\n//         bulletActiveClass: \"page__bullet_active\",\r\n//     },\r\n//     //скролл\r\n//     scrollbar: {\r\n//         el: '.page__scroll',\r\n//         dragClass: \"page__drag-scroll\",\r\n//         //можливість перетягувати скролл\r\n//         draggable: true,\r\n//     },\r\n\r\n//     //відключаємо автоініціалізацію\r\n//     init: false,\r\n\r\n//     //події\r\n//     on: {\r\n//         //подія ініціалізації\r\n//         init: function () {\r\n//             menuSlider();\r\n//             setScrollType();\r\n//             wrapper.classList.add('_loaded');\r\n//         },\r\n//         //подія зміни слайду\r\n//         slideChange: function (){\r\n//             menuSliderRemove();\r\n//             menuLinks[pageSlider.realIndex].classList.add('_active');\r\n//         },\r\n//         resize: function() {\r\n//             setScrollType();\r\n//         }\r\n//     },\r\n// });\r\n// let menuLinks = document.querySelectorAll('.menu__link');\r\n\r\n// function menuSlider () {\r\n//     if(menuLinks.length > 0) {\r\n//         menuLinks[pageSlider.realIndex].classList.add('_active');\r\n//         for (let index = 0; index < menuLinks.length; index++) {\r\n//             const menuLink = menuLinks[index];\r\n//             menuLink.addEventListener(\"click\", function (e) {\r\n//                 pageSlider.slideTo(index, 800);\r\n//                 menuLink.classList.add('_active');\r\n//                 e.preventDefault();\r\n//             });\r\n//         }\r\n//     }\r\n// }\r\n// function menuSliderRemove() {\r\n//     let menuLinkActive = document.querySelector('.menu__link._active');\r\n//     if (menuLinkActive) {\r\n//         menuLinkActive.classList.remove('_active');\r\n//     }\r\n// }\r\n\r\n// function setScrollType() {\r\n//     if (wrapper.classList.contains('_free')) {\r\n//         wrapper.classList.remove('_free');\r\n//         pageSlider.params.freeMode = false;\r\n//     }\r\n//     for (let index = 0; index < pageSlider.slides.length; index++) {\r\n//         const pageSlide = pageSlider.slides[index];\r\n//         const pageSlideContent = pageSlide.querySelector('.screen__content');\r\n//         if (pageSlideContent) {\r\n//             const pageSlideContentHeight = pageSlideContent.offsetHeight;\r\n//             if (pageSlideContentHeight > window.innerHeight) {\r\n//                 wrapper.classList.add('_free');\r\n//                 pageSlide.params.freeMode = true;\r\n//                 break;\r\n//             }\r\n//         }\r\n//     } \r\n// }\r\n\r\n// pageSlider.init();\r\n/*============================================================================================================*/\r\n\n\n//# sourceURL=webpack://gulp2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;